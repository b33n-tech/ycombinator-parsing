import streamlit as st
import pandas as pd
import io

# Dictionnaire de correspondance ville ‚Üí r√©gion (extrait, √† compl√©ter selon ton besoin)
ville_vers_region = {
    "Paris": "√éle-de-France",
    "Lyon": "Auvergne-Rh√¥ne-Alpes",
    "Marseille": "Provence-Alpes-C√¥te d'Azur",
    "Puteaux": "√éle-de-France",
    "Neuilly-sur-Seine": "√éle-de-France",
    "Paray-Vieille-Poste": "√éle-de-France",
    "Grandvilliers": "Hauts-de-France",
}

# Fonction pour attribuer une r√©gion √† partir de la ville d√©tect√©e dans le champ
def attribuer_region(localisation, ville_vers_region):
    if pd.isna(localisation):
        return ""
    for ville in ville_vers_region:
        if ville.lower() in localisation.lower():
            return ville_vers_region[ville]
    return "Non reconnu"

st.title("üìç Attribution automatique des r√©gions √† partir de la localisation")

# Upload de fichier
fichier = st.file_uploader("üì§ Upload ton fichier Excel", type=["xlsx"])

if fichier:
    df = pd.read_excel(fichier)
    st.write("‚úÖ Aper√ßu du fichier :", df.head())

    # S√©lection de la colonne contenant les localisations
    colonnes = df.columns.tolist()
    col_selection = st.selectbox("üß≠ Choisis la colonne de localisation", colonnes)

    if col_selection:
        df["R√©gion attribu√©e"] = df[col_selection].apply(lambda x: attribuer_region(x, ville_vers_region))
        st.write("‚úÖ R√©sultat avec r√©gions attribu√©es :", df.head())

        # G√©n√©ration Excel en m√©moire
        output = io.BytesIO()
        with pd.ExcelWriter(output, engine="xlsxwriter") as writer:
            df.to_excel(writer, index=False)
        output.seek(0)

        st.download_button(
            label="üì• T√©l√©charger le fichier enrichi",
            data=output,
            file_name="fichier_avec_regions.xlsx",
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        )
